# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  validate:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      shell: sh
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install flake8 wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    needs: validate
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
        - os: ubuntu-latest
          archs: x86_64 aarch64
        - os: macos-latest
          archs: x86_64 arm64 universal2
        - os: windows-latest
          archs: AMD64

    steps:
    - uses: actions/checkout@v3
    - name: Install cibuildwheel
      run: python3 -m pip install cibuildwheel==2.8.1
    - name: Install qemu
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update -y
        sudo apt-get install qemu-user-static
    - name: Build wheels
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_ARCHS: ${{ matrix.archs }}
      run: python3 -m cibuildwheel --output-dir wheelhouse
    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v3
      with:
        name: cybervision-${{ matrix.os }}
        path: ./wheelhouse/*.whl
