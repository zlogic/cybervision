//Kernel to compute the distances from a N-element vector to a set of M N-dimensional vectors

__kernel void computeDistances(__global   float  * outputDistances,
							   __global   float  * inputVectors,
							   __constant float  * vector,
							   const      uint   inputVectorsCount,
							   const      float  MaxKeypointDistance)
{
	uint gTid = get_global_id(0);
	uint lTid = get_local_id(0);

	float sum = 0;
	//Compute Eucledian distance
	float sqr;
	sqr= vector[0]-inputVectors[128*gTid+0];
	sum+= sqr*sqr;
	sqr= vector[1]-inputVectors[128*gTid+1];
	sum+= sqr*sqr;
	sqr= vector[2]-inputVectors[128*gTid+2];
	sum+= sqr*sqr;
	sqr= vector[3]-inputVectors[128*gTid+3];
	sum+= sqr*sqr;
	sqr= vector[4]-inputVectors[128*gTid+4];
	sum+= sqr*sqr;
	sqr= vector[5]-inputVectors[128*gTid+5];
	sum+= sqr*sqr;
	sqr= vector[6]-inputVectors[128*gTid+6];
	sum+= sqr*sqr;
	sqr= vector[7]-inputVectors[128*gTid+7];
	sum+= sqr*sqr;
	sqr= vector[8]-inputVectors[128*gTid+8];
	sum+= sqr*sqr;
	sqr= vector[9]-inputVectors[128*gTid+9];
	sum+= sqr*sqr;
	sqr= vector[10]-inputVectors[128*gTid+10];
	sum+= sqr*sqr;
	sqr= vector[11]-inputVectors[128*gTid+11];
	sum+= sqr*sqr;
	sqr= vector[12]-inputVectors[128*gTid+12];
	sum+= sqr*sqr;
	sqr= vector[13]-inputVectors[128*gTid+13];
	sum+= sqr*sqr;
	sqr= vector[14]-inputVectors[128*gTid+14];
	sum+= sqr*sqr;
	sqr= vector[15]-inputVectors[128*gTid+15];
	sum+= sqr*sqr;
	sqr= vector[16]-inputVectors[128*gTid+16];
	sum+= sqr*sqr;
	sqr= vector[17]-inputVectors[128*gTid+17];
	sum+= sqr*sqr;
	sqr= vector[18]-inputVectors[128*gTid+18];
	sum+= sqr*sqr;
	sqr= vector[19]-inputVectors[128*gTid+19];
	sum+= sqr*sqr;
	sqr= vector[20]-inputVectors[128*gTid+20];
	sum+= sqr*sqr;
	sqr= vector[21]-inputVectors[128*gTid+21];
	sum+= sqr*sqr;
	sqr= vector[22]-inputVectors[128*gTid+22];
	sum+= sqr*sqr;
	sqr= vector[23]-inputVectors[128*gTid+23];
	sum+= sqr*sqr;
	sqr= vector[24]-inputVectors[128*gTid+24];
	sum+= sqr*sqr;
	sqr= vector[25]-inputVectors[128*gTid+25];
	sum+= sqr*sqr;
	sqr= vector[26]-inputVectors[128*gTid+26];
	sum+= sqr*sqr;
	sqr= vector[27]-inputVectors[128*gTid+27];
	sum+= sqr*sqr;
	sqr= vector[28]-inputVectors[128*gTid+28];
	sum+= sqr*sqr;
	sqr= vector[29]-inputVectors[128*gTid+29];
	sum+= sqr*sqr;
	sqr= vector[30]-inputVectors[128*gTid+30];
	sum+= sqr*sqr;
	sqr= vector[31]-inputVectors[128*gTid+31];
	sum+= sqr*sqr;
	sqr= vector[32]-inputVectors[128*gTid+32];
	sum+= sqr*sqr;
	sqr= vector[33]-inputVectors[128*gTid+33];
	sum+= sqr*sqr;
	sqr= vector[34]-inputVectors[128*gTid+34];
	sum+= sqr*sqr;
	sqr= vector[35]-inputVectors[128*gTid+35];
	sum+= sqr*sqr;
	sqr= vector[36]-inputVectors[128*gTid+36];
	sum+= sqr*sqr;
	sqr= vector[37]-inputVectors[128*gTid+37];
	sum+= sqr*sqr;
	sqr= vector[38]-inputVectors[128*gTid+38];
	sum+= sqr*sqr;
	sqr= vector[39]-inputVectors[128*gTid+39];
	sum+= sqr*sqr;
	sqr= vector[40]-inputVectors[128*gTid+40];
	sum+= sqr*sqr;
	sqr= vector[41]-inputVectors[128*gTid+41];
	sum+= sqr*sqr;
	sqr= vector[42]-inputVectors[128*gTid+42];
	sum+= sqr*sqr;
	sqr= vector[43]-inputVectors[128*gTid+43];
	sum+= sqr*sqr;
	sqr= vector[44]-inputVectors[128*gTid+44];
	sum+= sqr*sqr;
	sqr= vector[45]-inputVectors[128*gTid+45];
	sum+= sqr*sqr;
	sqr= vector[46]-inputVectors[128*gTid+46];
	sum+= sqr*sqr;
	sqr= vector[47]-inputVectors[128*gTid+47];
	sum+= sqr*sqr;
	sqr= vector[48]-inputVectors[128*gTid+48];
	sum+= sqr*sqr;
	sqr= vector[49]-inputVectors[128*gTid+49];
	sum+= sqr*sqr;
	sqr= vector[50]-inputVectors[128*gTid+50];
	sum+= sqr*sqr;
	sqr= vector[51]-inputVectors[128*gTid+51];
	sum+= sqr*sqr;
	sqr= vector[52]-inputVectors[128*gTid+52];
	sum+= sqr*sqr;
	sqr= vector[53]-inputVectors[128*gTid+53];
	sum+= sqr*sqr;
	sqr= vector[54]-inputVectors[128*gTid+54];
	sum+= sqr*sqr;
	sqr= vector[55]-inputVectors[128*gTid+55];
	sum+= sqr*sqr;
	sqr= vector[56]-inputVectors[128*gTid+56];
	sum+= sqr*sqr;
	sqr= vector[57]-inputVectors[128*gTid+57];
	sum+= sqr*sqr;
	sqr= vector[58]-inputVectors[128*gTid+58];
	sum+= sqr*sqr;
	sqr= vector[59]-inputVectors[128*gTid+59];
	sum+= sqr*sqr;
	sqr= vector[60]-inputVectors[128*gTid+60];
	sum+= sqr*sqr;
	sqr= vector[61]-inputVectors[128*gTid+61];
	sum+= sqr*sqr;
	sqr= vector[62]-inputVectors[128*gTid+62];
	sum+= sqr*sqr;
	sqr= vector[63]-inputVectors[128*gTid+63];
	sum+= sqr*sqr;
	sqr= vector[64]-inputVectors[128*gTid+64];
	sum+= sqr*sqr;
	sqr= vector[65]-inputVectors[128*gTid+65];
	sum+= sqr*sqr;
	sqr= vector[66]-inputVectors[128*gTid+66];
	sum+= sqr*sqr;
	sqr= vector[67]-inputVectors[128*gTid+67];
	sum+= sqr*sqr;
	sqr= vector[68]-inputVectors[128*gTid+68];
	sum+= sqr*sqr;
	sqr= vector[69]-inputVectors[128*gTid+69];
	sum+= sqr*sqr;
	sqr= vector[70]-inputVectors[128*gTid+70];
	sum+= sqr*sqr;
	sqr= vector[71]-inputVectors[128*gTid+71];
	sum+= sqr*sqr;
	sqr= vector[72]-inputVectors[128*gTid+72];
	sum+= sqr*sqr;
	sqr= vector[73]-inputVectors[128*gTid+73];
	sum+= sqr*sqr;
	sqr= vector[74]-inputVectors[128*gTid+74];
	sum+= sqr*sqr;
	sqr= vector[75]-inputVectors[128*gTid+75];
	sum+= sqr*sqr;
	sqr= vector[76]-inputVectors[128*gTid+76];
	sum+= sqr*sqr;
	sqr= vector[77]-inputVectors[128*gTid+77];
	sum+= sqr*sqr;
	sqr= vector[78]-inputVectors[128*gTid+78];
	sum+= sqr*sqr;
	sqr= vector[79]-inputVectors[128*gTid+79];
	sum+= sqr*sqr;
	sqr= vector[80]-inputVectors[128*gTid+80];
	sum+= sqr*sqr;
	sqr= vector[81]-inputVectors[128*gTid+81];
	sum+= sqr*sqr;
	sqr= vector[82]-inputVectors[128*gTid+82];
	sum+= sqr*sqr;
	sqr= vector[83]-inputVectors[128*gTid+83];
	sum+= sqr*sqr;
	sqr= vector[84]-inputVectors[128*gTid+84];
	sum+= sqr*sqr;
	sqr= vector[85]-inputVectors[128*gTid+85];
	sum+= sqr*sqr;
	sqr= vector[86]-inputVectors[128*gTid+86];
	sum+= sqr*sqr;
	sqr= vector[87]-inputVectors[128*gTid+87];
	sum+= sqr*sqr;
	sqr= vector[88]-inputVectors[128*gTid+88];
	sum+= sqr*sqr;
	sqr= vector[89]-inputVectors[128*gTid+89];
	sum+= sqr*sqr;
	sqr= vector[90]-inputVectors[128*gTid+90];
	sum+= sqr*sqr;
	sqr= vector[91]-inputVectors[128*gTid+91];
	sum+= sqr*sqr;
	sqr= vector[92]-inputVectors[128*gTid+92];
	sum+= sqr*sqr;
	sqr= vector[93]-inputVectors[128*gTid+93];
	sum+= sqr*sqr;
	sqr= vector[94]-inputVectors[128*gTid+94];
	sum+= sqr*sqr;
	sqr= vector[95]-inputVectors[128*gTid+95];
	sum+= sqr*sqr;
	sqr= vector[96]-inputVectors[128*gTid+96];
	sum+= sqr*sqr;
	sqr= vector[97]-inputVectors[128*gTid+97];
	sum+= sqr*sqr;
	sqr= vector[98]-inputVectors[128*gTid+98];
	sum+= sqr*sqr;
	sqr= vector[99]-inputVectors[128*gTid+99];
	sum+= sqr*sqr;
	sqr= vector[100]-inputVectors[128*gTid+100];
	sum+= sqr*sqr;
	sqr= vector[101]-inputVectors[128*gTid+101];
	sum+= sqr*sqr;
	sqr= vector[102]-inputVectors[128*gTid+102];
	sum+= sqr*sqr;
	sqr= vector[103]-inputVectors[128*gTid+103];
	sum+= sqr*sqr;
	sqr= vector[104]-inputVectors[128*gTid+104];
	sum+= sqr*sqr;
	sqr= vector[105]-inputVectors[128*gTid+105];
	sum+= sqr*sqr;
	sqr= vector[106]-inputVectors[128*gTid+106];
	sum+= sqr*sqr;
	sqr= vector[107]-inputVectors[128*gTid+107];
	sum+= sqr*sqr;
	sqr= vector[108]-inputVectors[128*gTid+108];
	sum+= sqr*sqr;
	sqr= vector[109]-inputVectors[128*gTid+109];
	sum+= sqr*sqr;
	sqr= vector[110]-inputVectors[128*gTid+110];
	sum+= sqr*sqr;
	sqr= vector[111]-inputVectors[128*gTid+111];
	sum+= sqr*sqr;
	sqr= vector[112]-inputVectors[128*gTid+112];
	sum+= sqr*sqr;
	sqr= vector[113]-inputVectors[128*gTid+113];
	sum+= sqr*sqr;
	sqr= vector[114]-inputVectors[128*gTid+114];
	sum+= sqr*sqr;
	sqr= vector[115]-inputVectors[128*gTid+115];
	sum+= sqr*sqr;
	sqr= vector[116]-inputVectors[128*gTid+116];
	sum+= sqr*sqr;
	sqr= vector[117]-inputVectors[128*gTid+117];
	sum+= sqr*sqr;
	sqr= vector[118]-inputVectors[128*gTid+118];
	sum+= sqr*sqr;
	sqr= vector[119]-inputVectors[128*gTid+119];
	sum+= sqr*sqr;
	sqr= vector[120]-inputVectors[128*gTid+120];
	sum+= sqr*sqr;
	sqr= vector[121]-inputVectors[128*gTid+121];
	sum+= sqr*sqr;
	sqr= vector[122]-inputVectors[128*gTid+122];
	sum+= sqr*sqr;
	sqr= vector[123]-inputVectors[128*gTid+123];
	sum+= sqr*sqr;
	sqr= vector[124]-inputVectors[128*gTid+124];
	sum+= sqr*sqr;
	sqr= vector[125]-inputVectors[128*gTid+125];
	sum+= sqr*sqr;
	sqr= vector[126]-inputVectors[128*gTid+126];
	sum+= sqr*sqr;
	sqr= vector[127]-inputVectors[128*gTid+127];
	sum+= sqr*sqr;

	outputDistances[gTid]= sqrt(sum);
}
